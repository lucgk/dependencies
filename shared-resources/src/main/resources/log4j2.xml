<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <properties>
        <!-- 日志文件路径 -->
        <property name="LOG_HOME">${sys:LOG_HOME:-logs}</property>
        <property name="APP_NAME">${spring:spring.application.name}</property>
        <property name="FILE_MAX">30</property>
        <Property name="LOG_TRACE_PATTERN">${APP_NAME},%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-Span-Export}</Property>
        <!-- spring boot 官网格式 start -->
        <Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
        <Property name="LOG_LEVEL_PATTERN">%5p</Property>
        <Property name="LOG_DATEFORMAT_PATTERN">yyyy-MM-dd HH:mm:ss:SSS</Property>
        <Property name="CONSOLE_LOG_PATTERN">%clr{[%d{${LOG_DATEFORMAT_PATTERN}}]}{faint} %clr{${LOG_LEVEL_PATTERN}} %clr{[${LOG_TRACE_PATTERN}]} %clr{%pid}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
        <Property name="FILE_LOG_PATTERN">[%d{${LOG_DATEFORMAT_PATTERN}}] ${LOG_LEVEL_PATTERN} [${LOG_TRACE_PATTERN}] %pid --- [%t] %-40.40c{1.} : %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
        <!-- spring boot 官网格式 end -->
    </properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${CONSOLE_LOG_PATTERN}"/>
        </console>

        <RollingFile name="RollingFileInfo" fileName="${LOG_HOME}/info.log" filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/${APP_NAME}-info-%d{yyyy-MM-dd}-%i.log.gz" >
            <!--输出日志的格式-->
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
                <!-- SizeBasedTriggeringPolicy :文件大小滚动策略-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!--保存日志文件个数-->
            <DefaultRolloverStrategy max="${FILE_MAX}">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="*/*-info-*.log.gz" />
                    <IfLastModified age="1d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="RollingFileWarn" fileName="${LOG_HOME}/warn.log" filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/${APP_NAME}-warn-%d{yyyy-MM-dd}-%i.log.gz" >
            <!--输出日志的格式-->
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
                <!-- SizeBasedTriggeringPolicy :文件大小滚动策略-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!--保存日志文件个数-->
            <DefaultRolloverStrategy max="${FILE_MAX}">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="*/*-warn-*.log.gz" />
                    <IfLastModified age="1d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="RollingFileError" fileName="${LOG_HOME}/error.log" filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/${APP_NAME}-error-%d{yyyy-MM-dd}-%i.log.gz" >
            <!--输出日志的格式-->
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <CronTriggeringPolicy schedule="0 0 0 * * ?"/>
                <!-- SizeBasedTriggeringPolicy :文件大小滚动策略-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!--保存日志文件个数-->
            <DefaultRolloverStrategy max="${FILE_MAX}">
                <Delete basePath="${LOG_HOME}" maxDepth="2">
                    <IfFileName glob="*/*-error-*.log.gz" />
                    <IfLastModified age="1d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!-- spring boot官方过滤日志 start -->
        <Logger name="org.apache.catalina.startup.DigesterFactory" level="error" />
        <Logger name="org.apache.catalina.util.LifecycleBase" level="error" />
        <Logger name="org.apache.coyote.http11.Http11NioProtocol" level="warn" />
        <logger name="org.apache.sshd.common.util.SecurityUtils" level="warn"/>
        <Logger name="org.apache.tomcat.util.net.NioSelectorPool" level="warn" />
        <Logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="error" />
        <Logger name="org.hibernate.validator.internal.util.Version" level="warn" />
        <logger name="org.springframework.boot.actuate.endpoint.jmx" level="warn"/>
        <!-- spring boot官方过滤日志 end -->

        <!-- 各模块根据需求过滤对应日志 -->
        <logger name="org.springframework" level="INFO" />
        <logger name="com.alibaba" level="INFO" />
        <logger name="org.apache" level="INFO" />
        <logger name="org.hibernate" level="INFO" />
        <logger name="io.netty" level="INFO" />
        <logger name="io.lettuce" level="INFO" />
        <logger name="reactor" level="INFO" />
        <logger name="com.netflix" level="INFO" />
        <logger name="druid.sql" level="DEBUG" />
        <root level="all">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
        <!--AsyncLogger :异步日志,LOG4J有三种日志模式,全异步日志,混合模式,同步日志,性能从高到底,线程越多效率越高,也可以避免日志卡死线程情况发生-->
        <!--additivity="false" : additivity设置事件是否在root logger输出，为了避免重复输出，可以在Logger 标签下设置additivity为”false”-->
        <AsyncLogger name="AsyncLogger" level="trace" includeLocation="true" additivity="false">
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </AsyncLogger>
    </loggers>
</configuration>